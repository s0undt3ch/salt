<%- set prepare_workflow_salt_version_input = "${{ inputs.salt-version }}" %>
<%- set gh_environment = "staging" %>
<%- set prepare_actual_release = True %>
<%- extends 'nightly.yml.jinja' %>

<%- block on %>

on:
  workflow_dispatch:
    inputs:
      salt-version:
        type: string
        required: true
        description: The Salt version to set prior to building packages and staging the release.

<%- endblock on %>

<%- block concurrency %>

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.repository }}
  cancel-in-progress: false

<%- endblock concurrency %>


<%- block pre_jobs %>

  <%- set job_name = "check-requirements" %>

  <{ job_name }>:
  <%- do prepare_workflow_needs.append(job_name) %>
    name: Check Requirements
    runs-on: ubuntu-latest
    steps:
      - name: Check For Admin Permission
        uses: actions-cool/check-user-permission@v2
        with:
          require: admin
          username: ${{ github.triggering_actor }}

      - name: Check Branch
        run: |

          {#-
              Should we allow other branches?
          #}
          echo "Trying to run the staging workflow from branch ${{ github.ref_name }}"
          if [ "${{ github.ref_name }}" != "master" ]; then
              echo "Running the staging workflow from the ${{ github.ref_name }} branch is not allowed"
              exit 1
          else
              echo "Allowed"
          fi

<%- endblock pre_jobs %>


<%- block jobs %>
  <{- super() }>

  upload-release-artifacts:
    <%- do conclusion_needs.append('upload-release-artifacts') %>
    name: Upload Release Artifacts
    needs:
      - prepare-workflow
      - build-docs
      - build-repositories
    environment: <{ gh_environment }>
    runs-on:
      - self-hosted
      - linux
      - repo-<{ gh_environment }>
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Download Release Patch
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.patch
          path: artifacts/release

      - name: Download Source Tarball
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}.tar.gz
          path: artifacts/release

      - name: Download Release Documentation (HTML)
        uses: actions/download-artifact@v3
        with:
          name: salt-${{ needs.prepare-workflow.outputs.salt-version }}-docs-html.tar.xz
          path: artifacts/release

      - name: Download Release Documentation (ePub)
        uses: actions/download-artifact@v3
        with:
          name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.epub
          path: artifacts/release

      {#-

      - name: Download Release Documentation (PDF)
        uses: actions/download-artifact@v3
        with:
          name: Salt-${{ needs.prepare-workflow.outputs.salt-version }}.pdf
          path: artifacts/release

      #}

      - name: Upload Release Artifacts
        run: |
          tools release upload-artifacts ${{ needs.prepare-workflow.outputs.salt-version }} artifacts/release

  {#- We need the test.pypi.org upload job added here #}
  {#- We need the package upload tests against staging added here #}
<%- endblock jobs %>
