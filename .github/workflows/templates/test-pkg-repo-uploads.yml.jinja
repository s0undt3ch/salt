
  test-amazon-repo:
    <%- do test_repo_needs.append('test-amazon-repo') %>
    name: Test Amazon Linux Repository
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm64
        version:
          - "2"
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/amazon-linux:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Import GPG Key
        run: |
          rpm --import ${{ env.REPO_BASE_URL }}/amazon/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub

      - name: Import Repo File
        run: |
          curl -fsSL -o /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo ${{ env.REPO_BASE_URL }}/amazon/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo baseurl=${{ env.REPO_BASE_URL }}/amazon/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }} >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo gpgkey=${{ env.REPO_BASE_URL }}/amazon/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo

      - name: Install Salt
        run: |
          yum clean expire-cache
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>

  test-centos-repo:
    <%- do test_repo_needs.append('test-centos-repo') %>
    name: Test Centos Repository
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm64
        version:
          - "7"
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/centos:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Import GPG Key
        run: |
          rpm --import ${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub

      - name: Import Repo File
        run: |
          curl -fsSL -o /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo ${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo baseurl=${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }} >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo gpgkey=${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo

      - name: Install Salt
        run: |
          yum clean expire-cache
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>

  test-centos-stream-repo:
    <%- do test_repo_needs.append('test-centos-stream-repo') %>
    name: Test Centos Stream Repository
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm64
        version:
          - "8"
          - "9"
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/centos-stream:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Import GPG Key
        run: |
          rpm --import ${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub

      - name: Import Repo File
        run: |
          curl -fsSL -o /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo ${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo baseurl=${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }} >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo gpgkey=${{ env.REPO_BASE_URL }}/redhat/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo

      - name: Install Salt
        run: |
          yum clean expire-cache
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>

  test-debian-repo:
    <%- do test_repo_needs.append('test-debian-repo') %>
    name: Test Debian Repository
    strategy:
      fail-fast: false
      matrix:
        include:
          - {"version": "10", "codename": "buster", "arch": "amd64"}
          - {"version": "10", "codename": "buster", "arch": "arm64"}
          - {"version": "11", "codename": "bullseye", "arch": "amd64"}
          - {"version": "11", "codename": "bullseye", "arch": "arm64"}
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/debian:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Update System
        run: |
          apt-get update -y
          apt-get install -y curl

      - name: Download GPG Key
        run: |
          curl -fsSL -o /usr/share/keyrings/SALT-PROJECT-GPG-PUBKEY-2023.gpg \
            ${{ env.REPO_BASE_URL }}/debian/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version}}/SALT-PROJECT-GPG-PUBKEY-2023.gpg

      - name: Setup Repo
        run: |
          echo "deb [signed-by=/usr/share/keyrings/SALT-PROJECT-GPG-PUBKEY-2023.gpg arch=${{ matrix.arch }}] ${{ env.REPO_BASE_URL }}/debian/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version}} ${{ matrix.codename }} main" | sudo tee /etc/apt/sources.list.d/salt.list

      - name: Install Salt
        run: |
          apt-get update
          apt-get install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>

  test-fedora-repo:
    <%- do test_repo_needs.append('test-fedora-repo') %>
    name: Test Fedora Repository
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - arm64
        version:
          - "36"
          - "37"
          - "38"
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/fedora:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Import GPG Key
        run: |
          rpm --import ${{ env.REPO_BASE_URL }}/fedora/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub

      - name: Import Repo File
        run: |
          curl -fsSL -o /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo ${{ env.REPO_BASE_URL }}/fedora/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo baseurl=${{ env.REPO_BASE_URL }}/fedora/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }} >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo
          echo gpgkey=${{ env.REPO_BASE_URL }}/fedora/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version }}/SALT-PROJECT-GPG-PUBKEY-2023.pub >> /etc/yum.repos.d/salt-${{ needs.prepare-workflow.outputs.salt-version }}.repo

      - name: Install Salt
        run: |
          yum clean expire-cache
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>

  test-ubuntu-repo:
    <%- do test_repo_needs.append('test-ubuntu-repo') %>
    name: Test Ubuntu Repository
    strategy:
      fail-fast: false
      matrix:
        include:
          - {"version": "20.04", "codename": "focal", "arch": "amd64"}
          - {"version": "20.04", "codename": "focal", "arch": "arm64"}
          - {"version": "22.04", "codename": "jammy", "arch": "amd64"}
          - {"version": "22.04", "codename": "jammy", "arch": "arm64"}
    runs-on:
      - self-hosted
      - linux
      - ${{ matrix.arch }}
    environment: <{ gh_environment }>
    container: ghcr.io/saltstack/salt-ci-containers/ubuntu:${{ matrix.version }}
    needs:
      - prepare-workflow
      - publish-repositories

    steps:
      - name: Update System
        run: |
          apt-get update -y
          apt-get install -y curl

      - name: Download GPG Key
        run: |
          curl -fsSL -o /usr/share/keyrings/SALT-PROJECT-GPG-PUBKEY-2023.gpg \
            ${{ env.REPO_BASE_URL }}/ubuntu/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version}}/SALT-PROJECT-GPG-PUBKEY-2023.gpg

      - name: Setup Repo
        run: |
          echo "deb [signed-by=/usr/share/keyrings/SALT-PROJECT-GPG-PUBKEY-2023.gpg arch=${{ matrix.arch }}] ${{ env.REPO_BASE_URL }}/ubuntu/${{ matrix.version }}/${{ matrix.arch }}/minor/${{ needs.prepare-workflow.outputs.salt-version}} ${{ matrix.codename }} main" | sudo tee /etc/apt/sources.list.d/salt.list

      - name: Install Salt
        run: |
          apt-get update
          apt-get install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api
          yum install -y salt-master salt-minion salt-ssh salt-syndic salt-cloud salt-api

    <%- for command in ('salt-call --local test.versions',
                        'salt-call --local grains.items',
                        'salt --version',
                        'salt-master --version',
                        'salt-minion --version',
                        'salt-ssh --version',
                        'salt-syndic --version',
                        'salt-api --version',
                        'salt-cloud --version') %>

      - name: Test `<{ command }>`
        run: |
          <{ command }>
    <%- endfor %>
