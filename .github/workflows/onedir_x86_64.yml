name: Build Linux Onedir x86_64

on: [push, pull_request]

env:
  NOX_VERSION: "2022.8.7"


jobs:
  build:
    name: Build Onedir

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1000

    - name: Setup SSH 1
      env:
        GHA_SSH_KEY: ${{ secrets.GHA_SSH_KEY }}
        VAGRANT_CLOUD_TOKEN: ${{ secrets.VAGRANT_CLOUD_TOKEN }}
        SECRETS: ${{ toJson(secrets) }}
      run: |
        python3 -c "import os; print(repr(os.environ.get('GHA_SSH_KEY', 'NOTHING')[:10]))"
        python3 -c "import os; print(repr(os.environ.get('VAGRANT_CLOUD_TOKEN', 'NOTHING1')[:4]))"
        echo "$SECRETS"

    - name: Build onedir
      env:
        CONTAINER_IMAGE: "dwoz1/cicd:onedir-centos7-x86_64"
      run: ./pkg/onedir.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Salt Onedir X86_64
        path: salt*.tar.xz

    - name: Set Exit Status
      if: always()
      run: |
        mkdir exitstatus
        echo "${{ job.status }}" > exitstatus/${{ github.job }}-build

    - name: Upload Exit Status
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: exitstatus
        path: exitstatus


  amazon-linux-2:
    name: Amazon Linux 2
    uses: ./.github/workflows/test.yml
    needs:
      - build
    with:
      artifact-name: Salt Onedir X86_64
      vagrant-box-name: amazon-linux-2
    secrets:
      VAGRANT_CLOUD_TOKEN: ${{ secrets.VAGRANT_CLOUD_TOKEN }}


  report-code-coverage:
    name: Report Global Code Coverage
    runs-on: ubuntu-latest
    if: always()
    needs:
      - amazon-linux-2

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Download Code Coverage DB's
        uses: actions/download-artifact@v3
        with:
          name: code-coverage
          path: artifacts/coverage

      - name: Show Test Run Artifacts
        run: |
          tree -a artifacts

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Nox
        run: |
          python3 -m pip install 'nox==${{ env.NOX_VERSION }}'

      - name: Report Salt Code Coverage
        run: |
          nox --force-color -e report-coverage -- salt

      - name: Report Tests Code Coverage
        run: |
          nox --force-color -e report-coverage -- tests

      - name: Report Combined Code Coverage
        run: |
          nox --force-color -e report-coverage

      - name: Set Exit Status
        if: always()
        run: |
          mkdir exitstatus
          echo "${{ job.status }}" > exitstatus/${{ github.job }}-code-coverage-report

      - name: Upload Exit Status
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: exitstatus
          path: exitstatus

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the ${{ github.workflow }} Pipeline Exit Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - report-code-coverage
    steps:
    - name: Download Exit Status Files
      if: always()
      uses: actions/download-artifact@v3
      with:
        name: exitstatus
        path: exitstatus

    - name: Delete Exit Status Artifacts
      if: always()
      uses: geekyeggo/delete-artifact@v1
      with:
        name: exitstatus
        failOnError: false

    - name: Set Pipeline Exit Status
      run: |
        tree exitstatus
        grep -RE 'failure|cancelled' exitstatus/ && exit 1 || exit 0

    - name: Done
      if: always()
      run:
        echo "All worflows finished"
