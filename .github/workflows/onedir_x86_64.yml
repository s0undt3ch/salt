name: Build Linux Onedir x86_64

on: [push, pull_request]

jobs:
  build:
    name: Build Onedir

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1000

    - name: Build onedir
      run: CONTAINER_IMAGE=dwoz1/cicd:onedir-centos7-x86_64 ./pkg/onedir.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Salt Onedir X86_64
        path: salt*.tar.xz

    - name: Set Exit Status
      if: always()
      run: |
        mkdir exitstatus
        echo "${{ job.status }}" > exitstatus/${{ github.job }}-build

    - name: Upload Exit Status
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: exitstatus
        path: exitstatus

  debian-10:
    name: Debian 10
    uses: ./.github/workflows/test.yml
    needs: build
    with:
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      artifact_name: Salt Onedir X86_64
      vagrant_box_name: debian-10
      trigger_workflow: ${{ github.workflow }}

  debian-11:
    name: Debian 11
    uses: ./.github/workflows/test.yml
    needs: build
    with:
      run_id: ${{ github.run_id }}
      run_number: ${{ github.run_number }}
      artifact_name: Salt Onedir X86_64
      vagrant_box_name: debian-11
      trigger_workflow: ${{ github.workflow }}

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the ${{ github.workflow }} Pipeline Exit Status
    runs-on: ubuntu-latest
    if: always()
    needs:
      - debian-10
      - debian-11
    steps:
    - name: Download Exit Status Files
      if: always()
      uses: actions/download-artifact@v3
      with:
        name: exitstatus
        path: exitstatus

    - name: Delete Exit Status Artifacts
      if: always()
      uses: geekyeggo/delete-artifact@v1
      with:
        name: exitstatus
        failOnError: false

    - name: Delete The nox Artifact
      if: always()
      uses: geekyeggo/delete-artifact@v1
      with:
        name: nox
        failOnError: false

    - name: Set Pipeline Exit Status
      run: |
        grep -RE 'failure|cancelled' exitstatus/ && exit 1 || exit 0

    - name: Done
      if: always()
      run:
        echo "All worflows finished"
