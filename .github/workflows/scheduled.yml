# Do not edit these workflows directly as the changes made will be overwritten.
# Instead, edit the template '.github/workflows/templates/scheduled.yml.jinja'
---

name: Scheduled
run-name: "Scheduled (branch: ${{ github.ref_name }})"

on:
  schedule:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule
    - cron: '0 */8 * * *'  # Run every 8 hours

env:
  COLUMNS: 190
  CACHE_SEED: SEED-5  # Bump the number to invalidate all caches
  RELENV_DATA: "${{ github.workspace }}/.relenv"

permissions:
  contents: read  # for dorny/paths-filter to fetch a list of changed files
  pull-requests: read  # for dorny/paths-filter to read pull requests
  actions: write  # to trigger branch scheduled builds

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: false

jobs:

  workflow-requirements:
    name: Check Workflow Requirements
    runs-on: ubuntu-latest
    outputs:
      requirements-met: ${{ steps.check-requirements.outputs.requirements-met }}
    steps:
      - name: Check Requirements
        id: check-requirements
        run: |
          if [ "${RUN_SCHEDULED_BUILDS}" = "1" ]; then
            MSG="Running workflow because RUN_SCHEDULED_BUILDS=1"
            echo "${MSG}"
            echo "${MSG}" >> "${GITHUB_STEP_SUMMARY}"
            echo "requirements-met=true" >> "${GITHUB_OUTPUT}"
          elif [ "${{ github.event.repository.fork }}" = "true" ]; then
            MSG="Not running workflow because ${{ github.repository }} is a fork"
            echo "${MSG}"
            echo "${MSG}" >> "${GITHUB_STEP_SUMMARY}"
            echo "requirements-met=false" >> "${GITHUB_OUTPUT}"
          else
            MSG="Running workflow because ${{ github.repository }} is not a fork"
            echo "${MSG}"
            echo "${MSG}" >> "${GITHUB_STEP_SUMMARY}"
            echo "requirements-met=true" >> "${GITHUB_OUTPUT}"
          fi

  trigger-branch-scheduled-builds:
    name: Trigger Branch Workflows
    if: ${{ github.event_name == 'schedule' && fromJSON(needs.workflow-requirements.outputs.requirements-met) }}
    runs-on:
      - ubuntu-latest
    needs:
      - workflow-requirements
    steps:
      - name: Trigger 3006.x branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run scheduled.yml --repo ${{ github.repository }} --ref 3006.x

  prepare-workflow:
    name: Prepare Workflow Run
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.workflow-requirements.outputs.requirements-met) }}
    needs:
      - workflow-requirements
    outputs:
      jobs: ${{ steps.define-jobs.outputs.jobs }}
      runners: ${{ steps.runner-types.outputs.runners }}
      changed-files: ${{ steps.process-changed-files.outputs.changed-files }}
      testrun: ${{ steps.define-testrun.outputs.testrun }}
      salt-version: ${{ steps.setup-salt-version.outputs.salt-version }}
      cache-seed: ${{ steps.set-cache-seed.outputs.cache-seed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full clone to also get the tags to get the right salt version

      - name: Get Changed Files
        if: ${{ github.event_name == 'pull_request'}}
        id: changed-files
        uses: dorny/paths-filter@v2
        with:
          token: ${{ github.token }}
          list-files: json
          filters: |
            repo:
              - added|modified:
                - '**'
            doc-requirements:
              - added|modified: &doc_requirements
                - requirements/static/ci/py3.*/docs.txt
            lint-requirements:
              - added|modified: &lint_requirements
                - requirements/static/ci/py3.*/lint.txt
            pkg_requirements:
              - added|modified: &pkg_requirements
                - requirements/static/pkg/py3.*/darwin.txt
                - requirements/static/pkg/py3.*/linux.txt
                - requirements/static/pkg/py3.*/freebsd.txt
                - requirements/static/pkg/py3.*/windows.txt
            test_requirements:
              - added|modified: &test_requirements
                - requirements/static/ci/py3.*/darwin.txt
                - requirements/static/ci/py3.*/linux.txt
                - requirements/static/ci/py3.*/freebsd.txt
                - requirements/static/ci/py3.*/windows.txt
                - requirements/static/ci/py3.*/darwin-crypto.txt
                - requirements/static/ci/py3.*/linux-crypto.txt
                - requirements/static/ci/py3.*/freebsd-crypto.txt
                - requirements/static/ci/py3.*/windows-crypto.txt
            deleted:
              - deleted:
                - '**'
            docs:
              - added|modified:
                - doc/**
                - *doc_requirements
            workflows:
              - added|modified:
                - .github/actions/**/action.yml
                - .github/workflows/*.yml
                - .github/workflows/templates/*.yml.jinja2
            salt:
              - added|modified: &salt_added_modified
                - setup.py
                - noxfile.py
                - salt/**/*.py
                - tasks/**/*.py
                - tools/**/*.py
            tests:
              - added|modified: &tests_added_modified
                - tests/**/*.py
            lint:
              - added|modified:
                - .pylintrc
                - *lint_requirements
            golden_images:
              - added|modified:
                - cicd/golden-images.json
            pkg_tests:
              - added|modified: &pkg_tests_added_modified
                - pkg/**
                - *pkg_requirements
                - *salt_added_modified
            testrun:
              - added|modified:
                - *pkg_requirements
                - *test_requirements
                - *salt_added_modified
                - *tests_added_modified
                - *pkg_tests_added_modified

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Python Tools Scripts
        uses: ./.github/actions/setup-python-tools-scripts

      - name: Pretty Print The GH Actions Event
        run:
          tools ci print-gh-event

      - name: Setup Salt Version
        id: setup-salt-version
        uses: ./.github/actions/setup-salt-version
        with:
          salt-version: ""
          validate-version: true

      - name: Write Changed Files To A Local File
        run:
          echo '${{ toJSON(steps.changed-files.outputs) }}' > changed-files.json

      - name: Check Local Changed Files Contents
        if: ${{ github.event_name == 'pull_request' }}
        run:
          cat changed-files.json

      - name: Process Changed Files
        id: process-changed-files
        run: |
          tools ci process-changed-files ${{ github.event_name }} changed-files.json

      - name: Check Collected Changed Files
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo '${{ steps.process-changed-files.outputs.changed-files }}' | jq -C '.'

      - name: Define Runner Types
        id: runner-types
        run: |
          tools ci runner-types ${{ github.event_name }}

      - name: Check Defined Runners
        run: |
          echo '${{ steps.runner-types.outputs.runners }}' | jq -C '.'

      - name: Define Jobs
        id: define-jobs
        run: |
          tools ci define-jobs ${{ github.event_name }} changed-files.json

      - name: Check Defined Jobs
        run: |
          echo '${{ steps.define-jobs.outputs.jobs }}' | jq -C '.'

      - name: Define Testrun
        id: define-testrun
        run: |
          tools ci define-testrun ${{ github.event_name }} changed-files.json

      - name: Check Defined Test Run
        run: |
          echo '${{ steps.define-testrun.outputs.testrun }}' | jq -C '.'

      - name: Check Contents of generated testrun-changed-files.txt
        if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}
        run: |
          cat testrun-changed-files.txt || true

      - name: Upload testrun-changed-files.txt
        if: ${{ fromJSON(steps.define-testrun.outputs.testrun)['type'] != 'full' }}
        uses: actions/upload-artifact@v3
        with:
          name: testrun-changed-files.txt
          path: testrun-changed-files.txt

      - name: Set Cache Seed Output
        id: set-cache-seed
        run: |
          echo "cache-seed=${{ env.CACHE_SEED }}" >> "$GITHUB_OUTPUT"

  job-1:
    name: Job 1
    runs-on:
      - self-hosted
      - macos
      - x86_64
    steps:

      - name: Cat File
        run: |
          cat ~/foo.txt || echo "File does not exist"

      - name: Echo To File
        run: |
          echo FOO >> ~/foo.txt

      - name: Cat File
        run: |
          cat ~/foo.txt || echo "File does not exist"

  job-2:
    name: Job 2
    runs-on:
      - self-hosted
      - macos
      - x86_64
    steps:

      - name: Cat File
        run: |
          cat ~/foo.txt || echo "File does not exist"

<<<<<<< HEAD
=======
      - name: Echo To File
        run: |
          echo FOO >> ~/foo.txt

      - name: Cat File
        run: |
          cat ~/foo.txt || echo "File does not exist"

>>>>>>> db5794778c (f)

  set-pipeline-exit-status:
    # This step is just so we can make github require this step, to pass checks
    # on a pull request instead of requiring all
    name: Set the ${{ github.workflow }} Pipeline Exit Status
    if: always()
    runs-on: ubuntu-latest
    needs:
      - workflow-requirements
      - trigger-branch-scheduled-builds
      - prepare-workflow
    steps:
      - name: Get workflow information
        id: get-workflow-info
        uses: technote-space/workflow-conclusion-action@v3

      - name: Set Pipeline Exit Status
        shell: bash
        run: |
          if [ "${{ steps.get-workflow-info.outputs.conclusion }}" != "success" ]; then
            exit 1
          else
            exit 0
          fi

      - name: Done
        if: always()
        run:
          echo "All worflows finished"
